// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cinema_api.Data;

#nullable disable

namespace cinema_api.Data.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240812134937_SeedDirectorAndMovies")]
    partial class SeedDirectorAndMovies
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("cinema_api.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fernando Meirelles"
                        },
                        new
                        {
                            Id = 2,
                            Name = "José Padilha"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Walter Salles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cao Hamburger"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Héctor Babenco"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Martin Scorsese"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 10,
                            Name = "David Fincher"
                        });
                });

            modelBuilder.Entity("cinema_api.Entities.Function", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<TimeOnly>("ScheduleHour")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Functions");
                });

            modelBuilder.Entity("cinema_api.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInternational")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = 1,
                            IsInternational = false,
                            Title = "City of God"
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = 2,
                            IsInternational = false,
                            Title = "Elite Squad"
                        },
                        new
                        {
                            Id = 3,
                            DirectorId = 3,
                            IsInternational = false,
                            Title = "Central Station"
                        },
                        new
                        {
                            Id = 4,
                            DirectorId = 4,
                            IsInternational = false,
                            Title = "The Year My Parents Went on Vacation"
                        },
                        new
                        {
                            Id = 5,
                            DirectorId = 5,
                            IsInternational = false,
                            Title = "Carandiru"
                        },
                        new
                        {
                            Id = 6,
                            DirectorId = 6,
                            IsInternational = true,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 7,
                            DirectorId = 7,
                            IsInternational = true,
                            Title = "E.T. the Extra-Terrestrial"
                        },
                        new
                        {
                            Id = 8,
                            DirectorId = 8,
                            IsInternational = true,
                            Title = "Goodfellas"
                        },
                        new
                        {
                            Id = 9,
                            DirectorId = 9,
                            IsInternational = true,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 10,
                            DirectorId = 10,
                            IsInternational = true,
                            Title = "Fight Club"
                        },
                        new
                        {
                            Id = 11,
                            DirectorId = 6,
                            IsInternational = true,
                            Title = "The Grand Budapest Hotel"
                        },
                        new
                        {
                            Id = 12,
                            DirectorId = 7,
                            IsInternational = true,
                            Title = "2001: A Space Odyssey"
                        },
                        new
                        {
                            Id = 13,
                            DirectorId = 8,
                            IsInternational = true,
                            Title = "Psycho"
                        },
                        new
                        {
                            Id = 14,
                            DirectorId = 9,
                            IsInternational = true,
                            Title = "The Godfather"
                        },
                        new
                        {
                            Id = 15,
                            DirectorId = 10,
                            IsInternational = true,
                            Title = "The Good, the Bad and the Ugly"
                        });
                });

            modelBuilder.Entity("cinema_api.Entities.Function", b =>
                {
                    b.HasOne("cinema_api.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("cinema_api.Entities.Movie", b =>
                {
                    b.HasOne("cinema_api.Entities.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");
                });
#pragma warning restore 612, 618
        }
    }
}
